/* Global*/
:root {
    --dark-blue: #363f5f;
    --green: #49AA26;
    --light-green: #3dd705;
    --red: #e92929;
}
* {
    box-sizing: border-box;
    padding: 0;
    margin: 0;
}

html {
    font-size: 93.75%; /* 15px, 100% equivale 16px, para descobrir isso basta fazer regra de três 100  16
                                              ?   15 */
}

body {
    background: #f0f2f5;
    font-family: 'Poppins', 'sans-serif';
}

/* O position absolute é sempre relativo ao pai se for relativo, se colocar absoluto em uma caixa, ela ficará na frente da outra caixa se tiver, se usarmos um display none, ou um invisible, afetará os leitores de tela*/
.sr-only {
    position: absolute;
    width: 1px;
    height: 1px;
    padding: 0;
    margin: -1px;
    overflow: hidden;
    clip: rect(0, 0, 0, 0);
    white-space: nowrap;
    border-width: 0;
    /* Fazer tudo isso daqui, faz com que suma da tela o título transações e o balanço mas não dos leitores de tela*/
    /* Pode ser criado nos seus CSSs para esconder coisas que vc não quer deixar aparecendo, por exemplo é usado para acessibilidade, não aparece no seu site mas está ali para os leitores de tela*/
}

.container {
    width: min(90vw, 800px);

    margin: auto;
}

/* Titles*/
h2 {
    margin-top: 3.2rem;
    margin-bottom: 0.8rem;
    color: var(--dark-blue);

    font-weight: normal;
}

/* Links and Buttons*/
a {
    color: var(--green);
    text-decoration: none;
}

a:hover {
    color: var(--light-green);
}

button {
    width: 100%;
    height: 50px;

    border: none;

    color: white;
    background: var(--green);

    padding: 0;

    border-radius: 0.25rem;

    cursor: pointer; /* Passou o mouse em cima ele fica a mãozinha*/
}

button:hover {
    background: var(--light-green);
}

.button.new {
    display: inline-block; /* Ele pega as propriedades do inline e do block e aplica, o inline pega a altura de acordo com o elemento e o block aceita margin top ou bottom*/
    margin-bottom: .8rem;
}

.button.cancel {
    color: var(--red);
    border: 2px var(--red) solid;
    border-radius: 0.25rem;

    height: 50px;

    display: flex;
    justify-content: center;
    align-items: center;

    opacity: 0.6;
}

.button.cancel:hover {
    opacity: 1;
}

/*Header*/
header {
    background: #2D4A22;
    padding: 2rem 0 10rem;
    text-align: center;
}

#logo {
    color: #fff;
    font-weight: 100;
}

/* Balance*/
#balance {
    margin-top: -8rem;
}

#balance h2 {
    color: white;
    margin-top: 0;
}

/* Cards*/
.card {
    background: white;
    padding: 1.5rem 2rem;
    border-radius: 0.25rem;

    margin-bottom: 2rem;

    color: var(--dark-blue);

}

.card h3 {
    font-weight: normal;
    font-size: 1rem;

    display: flex; /* Elemento um ao lado do outro*/
    align-items: center;
    justify-content: space-between;
}

.card p {
    font-size: 2rem;
    line-height: 3rem;

    margin-top: 1rem;
}

.card.total {
    background: var(--green);
    color: white; 
}

/* Transaction*/
#transaction {
    width: 100%;
    display: block;
    overflow-x: auto;
}

/* Table*/
#data-table {
    width: 100%;
    border-spacing: 0 0.5rem;
    color: #969cb3;
}

table thead tr th:first-child,
table tbody tr td:first-child {
    border-radius: 0.25rem 0 0 0.25rem;
}

table thead tr th:last-child,
table tbody tr td:last-child{
    border-radius: 0 0.25 0.25 0;
}

table thead th {
    background: white;

    font-weight: normal;
    padding: 1rem 2rem;

    text-align: left;
}

table tbody tr {
    opacity: 0.7;
}

table tbody tr:hover {
    opacity: 1;
}

table tbody td {
    background: white;

    padding: 1rem 2rem;
}

td.description {
    color: var(--dark-blue);
}

td.income {
    color: #12a454;
}

td.expense {
    color: #e92929;
}

/* Modal*/
.modal-overlay {
    width: 100%;
    height: 100%;

    background-color: rgba(0, 0, 0, 0.7); /*rgba (red green blue e alpha, alpha é a transparência), é a cor de fundo preto com um tom mais claro quando deixa vísivel o modal-overlay*/

    position: fixed; /*quando vc mexe no position vc desbloquia propriedades novas*/
    top: 0;

    display: flex;
    align-items: center;
    justify-content: center;

    opacity: 0;
    visibility: hidden;

    z-index: 999; /* Empilhamento dos elementos, ou seja, ele vai sobrepor todos*/
}

.modal-overlay.active {
    opacity: 1;
    visibility: visible;

}

.modal {
    background: #F0F2F5;
    padding: 2.4rem;
    /*Se o conteúdo crescer mais, o padding cresce tbm de acordo com o conteúdo dentro de caixa*/
    width: 90%;
    max-width: 500px; /* Menos de 500px ela mantém os 90%*/

    position: relative;
    z-index: 1; /* Empilhamento dos elementos*/
    

}

/* Form*/
#form {
    max-width: 500px;
}

#form h2 {
    margin-top: 0;
}

#form form input {
    border: none;
    border-radius: 0.2rem;

    padding: 0.8rem;

    width: 100%;
}

.input-group {
    margin-top: .8rem; /* Ele da um espaço entre os inputs*/
}

.input-group .help {
    opacity: 0.4;
}

.input-group.actions {
    display: flex;
    align-items: center;
    justify-content: space-between;
}

.input-group.actions .button,
.input-group.actions button {
    width: 40%;
} 

/* Footer*/
footer {
    text-align: center;
    padding: 4rem 0 2rem;
    color: var(--dark-blue);

    opacity: 0.6;
}

/* Responsive*/ 

/* O media pode ser usado para implementar regras e em seguida sua estrutura css que vai ser executada.
As Media queries definem condições para utilização de estilos CSS. Se o dispositivo de acesso do 
usuário se adequar as condições se aplicam os estilos.*/
@media (min-width: 800px) { /* Se ele for maior que 800px...*/
    html {
        font-size: 87.5%;
    }

    #balance {
        display: grid;
        grid-template-columns: repeat(3, 1fr); /* Ele repete 3 vezes o 1fr, distribuindo para três colunas*/
        gap: 2rem;
    }
}
